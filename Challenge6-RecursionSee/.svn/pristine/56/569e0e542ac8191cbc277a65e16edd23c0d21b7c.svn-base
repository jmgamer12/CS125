//UIUC CS125 FALL 2014 MP. File: Person.java, CS125 Project: Challenge6-RecursionSee, Version: 2015-10-26T21:29:19-0500.299404275
/**
 * @author jmgreen5
 *
 */
public class Person
{
private final String name;
private final int age;
private final char gender;
private final Person child1; //left child
private final Person child2; //right child

public Person(String name, int age, char gender, Person c1, Person c2)
{
    this.name=name;
    this.age=age;
    this.gender=gender;
    this.child1 = c1;
    this.child2 = c2;
}

public String toString()
{
    return name+"*"+age+"*"+gender;
}

public String getName() 
{
	return name;
}

public int getAge() 
{
	return age;
}

public char getGender() 
{
	return gender;
}

public boolean equals(Person p)
{
	return (this.name.equals(p.name)) &&
			(this.age==p.age) &&
			(this.gender==p.gender);
}


public void print() 
{
   System.out.println(this);
   if(child1 != null)
       child1.print();
   if(child2 != null)
       child2.print();
   
}

public int count() // total person count including this object
{
	int count = 1;
	if (child1 != null) 
		count += child1.count();
	if (child2 != null) 
		count += child2.count();
	return count;
}

public int countGrandChildren() {
	return countGrandChildren(2);
}

public int countGrandChildren(int grandGen) // but not greatGrandChildren
{
	int count = 0;
	if (grandGen == 0)
		return 1;
	if (grandGen > 0) {
		if (child1 != null) 
			count += child1.countGrandChildren(grandGen - 1);
		if (child2 != null) 
			count += child2.countGrandChildren(grandGen - 1);
	}
	return count;
}

public int countMaxGenerations()
{
	int maxGen = 0;
	if (child1 != null)
		maxGen = child1.countMaxGenerations();
	if (child2 != null)
		maxGen = Math.max(maxGen, child2.countMaxGenerations());
	return maxGen + 1;
}

public int countGender(char gen)
{
	int count;
	if (this.gender == gen)
		count = 1;
	else
		count = 0;
	if(child1 != null)
		count = child1.countGender(gen) + count;
	if(child2 != null)
		count = child2.countGender(gen) + count;
	return count;
	
}


public Person search(String name2, int maxGeneration)
{
	Person j = null;
	if (this.name.equals(name2)) 
		return this;
	if (maxGeneration > 0) {
		if (child1 != null) 
			j = child1.search(name2, maxGeneration - 1);
		if (child2 != null && j == null) 
			j = child2.search(name2, maxGeneration - 1);
	}
	return j;
}

} // end of class
